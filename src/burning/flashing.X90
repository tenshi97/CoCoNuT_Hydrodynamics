#if (!defined(NUCLEAR_ELEMENT_TO_BURN_TO) || !defined(NUCLEAR_ELEMENT_TO_BURN_FROM) || !defined(THRESHOLD_TEM) || !defined(FIRST_IRON_ISOTOPE))
#error You have to define the nuclear element where burning starts,
#error the threshold temperature, the element where burning is supposed
#error to end, and the first isotope of the iron
#endif

       if (FIRST_IRON_ISOTOPE .lt. NUCLEAR_ELEMENT_TO_BURN_TO) then
           last_intermediate_element = FIRST_IRON_ISOTOPE -1
       else if (FIRST_IRON_ISOTOPE .gt. NUCLEAR_ELEMENT_TO_BURN_TO) then
           last_intermediate_element = NUCLEAR_ELEMENT_TO_BURN_TO -1
       else
          last_intermediate_element = NUCLEAR_ELEMENT_TO_BURN_TO
       endif

! do a flashing to the nuclear element NUCLEAR_ELEMENT_TO_BURN_TO
! starting from element NUCLEAR_ELEMENT_TO_BURN_FROM and include
! almost all intermediate elements (you never flash iron to sth. else! )
      do i = 5, nzn4
         if (tmp(i) > THRESHOLD_TEM .and. rhonu(i) < lsrolo ) then
#ifdef NO_FLASHING_AT_SONIC_POINT
         ! Do not burn if Mach number is between 0.7 and 1.3,
         ! as this can create an artificial burning front
         ! following the sonic point
         if (abs(1.0 - abs(unu(i)) / sqrt(gamc(i) * p(i) / rhonu(i))) > 0.3) then
#endif
            dummy = xnnu(i,NUCLEAR_ELEMENT_TO_BURN_TO)

            dummy2 = 0._rk

#ifndef NO_INTERMEDIATE
            ! all intermediate elements between NUCLEAR_ELEMENT_TO_BURN_FROM
            ! and NUCLEAR_ELEMENT_TO_BURN_TO -1 will be burned to
            ! NUCLEAR_ELEMENT_TO_BURN_TO with the ugly exception that you do 
            ! never want to flash xxFe isotopes

            do flashing_index = NUCLEAR_ELEMENT_TO_BURN_FROM, last_intermediate_element
#else
            ! NUCLEAR_ELEMENT_TO_BURN_TO will be created from
            ! NUCLEAR_ELEMENT_TO_BURN_FROM (and no intermediate elements
            ! are considered)
            flashing_index = NUCLEAR_ELEMENT_TO_BURN_FROM
#endif
            dummy2 = dummy2 + xnnu (i,flashing_index)

#ifdef DEBUG_FLASH
            write (*,*) "    flashing_index ",flashing_index, "comp ", &
                    xnnu (i,flashing_index),dummy2
#endif
            xnnu (i,flashing_index) = 0.0_rk
#ifndef NO_INTERMEDIATE
            enddo
#endif

#ifdef DEBUG_FLASH
            write (*,*) "Zone: ",i," mass fraction before flash ", &
            xnnu(i,NUCLEAR_ELEMENT_TO_BURN_TO),                &
            " mass fraction after flash ",xnnu (i,NUCLEAR_ELEMENT_TO_BURN_TO)+dummy2
#endif
            xnnu (i,NUCLEAR_ELEMENT_TO_BURN_TO) =  xnnu(i,NUCLEAR_ELEMENT_TO_BURN_TO)   + dummy2

#ifdef NO_FLASHING_AT_SONIC_POINT
         endif ! no flashing a t sonic point
#endif
         endif ! flash region


      enddo

#undef NUCLEAR_ELEMENT_TO_BURN_TO
#undef NUCLEAR_ELEMENT_TO_BURN_FROM
#undef FIRST_IRON_ISOTOPE
#undef NO_INTERMEDIATE
#undef LAST_INTERMEDIATE_ELEMENT
#undef THRESHOLD_TEM
#undef DEBUG_FLASH
! vi: syntax=fortran
